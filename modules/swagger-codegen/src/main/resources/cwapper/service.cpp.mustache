/*
{{{appDescription}}}
                        Please EDIT this file
*/

#include "cwapper.hpp"
#include "restful.hpp"

class service: public cwapper::restful {
public:
    service(cppcms::service &srv): restful(srv) {};

{{#x-cwapper}}
{{#operations}}
    {{#returnType}}{{returnType}}{{^returnSimpleType}}<{{returnBaseType}}>{{/returnSimpleType}}{{/returnType}}{{^returnType}}void{{/returnType}} {{operationId}}({{#allParams}}{{dataType}}{{#isListContainer}}<{{baseType}}>{{/isListContainer}} {{paramName}}{{#hasMore}}, {{/hasMore}}{{/allParams}}) {
        std::cerr << "DEBUG: <handler:{{operationId}}>"
    {{#allParams}}
            << std::endl << "{{paramName}}=(" << {{paramName}} << ")" 
    {{/allParams}}
            << std::endl;
    {{#bodyParams}}
        return{{#returnType}} {{paramName}}{{/returnType}};
    {{/bodyParams}}
    {{^bodyParams}}
        return{{#returnType}} {{returnType}}{{#returnSimpleType}}(){{/returnSimpleType}}{{^returnSimpleType}}<{{returnBaseType}}>(){{/returnSimpleType}}{{/returnType}};
    {{/bodyParams}}
    }
{{/operations}}
{{/x-cwapper}}

};

int main(int argc,char ** argv) {
    try {
        cppcms::service srv(argc,argv);
        srv.applications_pool().mount(cppcms::applications_factory<service>());
        srv.run();
    } catch(std::exception const &e) {
        std::cerr << e.what() << std::endl;
    }
}
