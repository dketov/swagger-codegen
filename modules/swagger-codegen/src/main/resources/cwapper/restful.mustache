#ifndef __RESTFUL_HPP
#define __RESTFUL_HPP

#include "cwapper.hpp"

namespace cwapper {
{{#models}}
{{#model}}
    typedef cwapper::data {{name}};
{{/model}}
{{/models}}
  
    class restful: public cppcms::application {
    public:
        restful(cppcms::service &);

{{#x-cwapper}}
{{#operations}}
    virtual {{#returnType}}{{returnType}}{{^returnSimpleType}}<{{returnBaseType}}>{{/returnSimpleType}}{{/returnType}}{{^returnType}}cwapper::data{{/returnType}} {{operationId}}({{#allParams}}{{dataType}}{{#isListContainer}}<{{baseType}}>{{/isListContainer}} {{paramName}}{{#hasMore}}, {{/hasMore}}{{/allParams}}) {
    {{#bodyParams}}
        return {{paramName}};
    {{/bodyParams}}
    {{^bodyParams}}
        return cwapper::data();
    {{/bodyParams}}
    }
{{/operations}}
{{/x-cwapper}}
    private:
        cwapper::data body();
        cwapper::parameter parameter(std::string);
        void CORS();
        void __api__();
    };
}

#endif
